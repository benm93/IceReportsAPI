// <auto-generated />
using EFGetStarted.AspNetCore.NewDb.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace IceReportsAPI.Migrations
{
    [DbContext(typeof(ReportsContext))]
    [Migration("20190307131736_MakeAreaSingular")]
    partial class MakeAreaSingular
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IceReportsAPI.Models.Area", b =>
                {
                    b.Property<int>("AreaId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("AreaId");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("IceReportsAPI.Models.Climb", b =>
                {
                    b.Property<int>("ClimbId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<int?>("ReportId");

                    b.HasKey("ClimbId");

                    b.HasIndex("ReportId");

                    b.ToTable("Climbs");
                });

            modelBuilder.Entity("IceReportsAPI.Models.Picture", b =>
                {
                    b.Property<int>("PictureId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Link");

                    b.Property<int?>("ReportId");

                    b.HasKey("PictureId");

                    b.HasIndex("ReportId");

                    b.ToTable("Pictures");
                });

            modelBuilder.Entity("IceReportsAPI.Models.Report", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AreaId");

                    b.Property<string>("Description");

                    b.Property<int>("Rating");

                    b.HasKey("ReportId");

                    b.HasIndex("AreaId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("IceReportsAPI.Models.Climb", b =>
                {
                    b.HasOne("IceReportsAPI.Models.Report")
                        .WithMany("Climbs")
                        .HasForeignKey("ReportId");
                });

            modelBuilder.Entity("IceReportsAPI.Models.Picture", b =>
                {
                    b.HasOne("IceReportsAPI.Models.Report")
                        .WithMany("Pictures")
                        .HasForeignKey("ReportId");
                });

            modelBuilder.Entity("IceReportsAPI.Models.Report", b =>
                {
                    b.HasOne("IceReportsAPI.Models.Area", "Area")
                        .WithMany()
                        .HasForeignKey("AreaId");
                });
#pragma warning restore 612, 618
        }
    }
}
